# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: React_APP with Docker - CI setup

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
      - run: docker build -t manisha_sinha/react-test-ci -f Dockerfile.dev .
      - run: docker run -e CI=true manisha_sinha/react-test-ci npm run test
      
      - name: Generate deployment package
        run: zip -r deploy.zip . -x '*.git*'

      - name: Wait for Elastic Beanstalk to be Ready
        run: |
          while true; do
            STATUS=$(aws elasticbeanstalk describe-environments \
              --application-name react-docker-ci-cd-practice \
              --environment-names React-docker-ci-cd-practice-env \
              --query "Environments[0].Status" --output text)
            if [ "$STATUS" = "Ready" ]; then
              echo "Environment is Ready. Proceeding with deployment."
              break
            else
              echo "Environment status is $STATUS. Waiting..."
              sleep 30
            fi
          done

      - name: Deploy to AWS ElasticBeanStalk
        uses: einaregilsson/beanstalk-deploy@v18
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
          aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
          application_name: react-docker-ci-cd-practice
          environment_name: React-docker-ci-cd-practice-env
          existing_bucket_name: elasticbeanstalk-ap-southeast-2-533267172420
          region: ap-southeast-2
          version_label: ${{ github.sha }}
          deployment_package: deploy.zip
